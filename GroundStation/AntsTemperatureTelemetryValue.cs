using System;
namespace GroundStation
{
	public class AntsTemperatureTelemetryValue : TelemetryValue
	{
		private static double[] lookupTable = AntsTemperatureTelemetryValue.BuildLookupTable();
		public override string AsString
		{
			get
			{
				return string.Format("{0:N1}", AntsTemperatureTelemetryValue.lookupTable[(int)((System.UIntPtr)this.AsUInt)]);
			}
		}
		public override double AsDouble
		{
			get
			{
				return AntsTemperatureTelemetryValue.lookupTable[(int)((System.UIntPtr)this.AsUInt)];
			}
		}
		public AntsTemperatureTelemetryValue(object raw) : base(raw)
		{
		}
		private static double[] BuildLookupTable()
		{
			int[,] array = new int[,]
			{

				{
					-255,
					2147483647
				},

				{
					-255,
					2616
				},

				{
					-50,
					2616
				},

				{
					-49,
					2607
				},

				{
					-48,
					2598
				},

				{
					-47,
					2589
				},

				{
					-46,
					2580
				},

				{
					-45,
					2571
				},

				{
					-44,
					2562
				},

				{
					-43,
					2553
				},

				{
					-42,
					2543
				},

				{
					-41,
					2533
				},

				{
					-40,
					2522
				},

				{
					-39,
					2512
				},

				{
					-38,
					2501
				},

				{
					-37,
					2491
				},

				{
					-36,
					2481
				},

				{
					-35,
					2470
				},

				{
					-34,
					2460
				},

				{
					-33,
					2449
				},

				{
					-32,
					2439
				},

				{
					-31,
					2429
				},

				{
					-30,
					2418
				},

				{
					-29,
					2408
				},

				{
					-28,
					2397
				},

				{
					-27,
					2387
				},

				{
					-26,
					2376
				},

				{
					-25,
					2366
				},

				{
					-24,
					2355
				},

				{
					-23,
					2345
				},

				{
					-22,
					2334
				},

				{
					-21,
					2324
				},

				{
					-20,
					2313
				},

				{
					-19,
					2302
				},

				{
					-18,
					2292
				},

				{
					-17,
					2281
				},

				{
					-16,
					2271
				},

				{
					-15,
					2260
				},

				{
					-14,
					2250
				},

				{
					-13,
					2239
				},

				{
					-12,
					2228
				},

				{
					-11,
					2218
				},

				{
					-10,
					2207
				},

				{
					-9,
					2197
				},

				{
					-8,
					2186
				},

				{
					-7,
					2175
				},

				{
					-6,
					2164
				},

				{
					-5,
					2154
				},

				{
					-4,
					2143
				},

				{
					-3,
					2132
				},

				{
					-2,
					2122
				},

				{
					-1,
					2111
				},

				{
					0,
					2100
				},

				{
					1,
					2089
				},

				{
					2,
					2079
				},

				{
					3,
					2068
				},

				{
					4,
					2057
				},

				{
					5,
					2047
				},

				{
					6,
					2036
				},

				{
					7,
					2025
				},

				{
					8,
					2014
				},

				{
					9,
					2004
				},

				{
					10,
					1993
				},

				{
					11,
					1982
				},

				{
					12,
					1971
				},

				{
					13,
					1961
				},

				{
					14,
					1950
				},

				{
					15,
					1939
				},

				{
					16,
					1928
				},

				{
					17,
					1918
				},

				{
					18,
					1907
				},

				{
					19,
					1896
				},

				{
					20,
					1885
				},

				{
					21,
					1874
				},

				{
					22,
					1864
				},

				{
					23,
					1853
				},

				{
					24,
					1842
				},

				{
					25,
					1831
				},

				{
					26,
					1820
				},

				{
					27,
					1810
				},

				{
					28,
					1799
				},

				{
					29,
					1788
				},

				{
					30,
					1777
				},

				{
					31,
					1766
				},

				{
					32,
					1756
				},

				{
					33,
					1745
				},

				{
					34,
					1734
				},

				{
					35,
					1723
				},

				{
					36,
					1712
				},

				{
					37,
					1701
				},

				{
					38,
					1690
				},

				{
					39,
					1679
				},

				{
					40,
					1668
				},

				{
					41,
					1657
				},

				{
					42,
					1646
				},

				{
					43,
					1635
				},

				{
					44,
					1624
				},

				{
					45,
					1613
				},

				{
					46,
					1602
				},

				{
					47,
					1591
				},

				{
					48,
					1580
				},

				{
					49,
					1569
				},

				{
					50,
					1558
				},

				{
					51,
					1547
				},

				{
					52,
					1536
				},

				{
					53,
					1525
				},

				{
					54,
					1514
				},

				{
					55,
					1503
				},

				{
					56,
					1492
				},

				{
					57,
					1481
				},

				{
					58,
					1470
				},

				{
					59,
					1459
				},

				{
					60,
					1448
				},

				{
					61,
					1436
				},

				{
					62,
					1425
				},

				{
					63,
					1414
				},

				{
					64,
					1403
				},

				{
					65,
					1391
				},

				{
					66,
					1380
				},

				{
					67,
					1369
				},

				{
					68,
					1358
				},

				{
					69,
					1346
				},

				{
					70,
					1335
				},

				{
					71,
					1324
				},

				{
					72,
					1313
				},

				{
					73,
					1301
				},

				{
					74,
					1290
				},

				{
					75,
					1279
				},

				{
					76,
					1268
				},

				{
					77,
					1257
				},

				{
					78,
					1245
				},

				{
					79,
					1234
				},

				{
					80,
					1223
				},

				{
					81,
					1212
				},

				{
					82,
					1201
				},

				{
					83,
					1189
				},

				{
					84,
					1178
				},

				{
					85,
					1167
				},

				{
					86,
					1155
				},

				{
					87,
					1144
				},

				{
					88,
					1133
				},

				{
					89,
					1122
				},

				{
					90,
					1110
				},

				{
					91,
					1099
				},

				{
					92,
					1088
				},

				{
					93,
					1076
				},

				{
					94,
					1065
				},

				{
					95,
					1054
				},

				{
					96,
					1042
				},

				{
					97,
					1031
				},

				{
					98,
					1020
				},

				{
					99,
					1008
				},

				{
					100,
					997
				},

				{
					101,
					986
				},

				{
					102,
					974
				},

				{
					103,
					963
				},

				{
					104,
					951
				},

				{
					105,
					940
				},

				{
					106,
					929
				},

				{
					107,
					917
				},

				{
					108,
					906
				},

				{
					109,
					895
				},

				{
					110,
					883
				},

				{
					111,
					872
				},

				{
					112,
					860
				},

				{
					113,
					849
				},

				{
					114,
					837
				},

				{
					115,
					826
				},

				{
					116,
					814
				},

				{
					117,
					803
				},

				{
					118,
					791
				},

				{
					119,
					780
				},

				{
					120,
					769
				},

				{
					121,
					757
				},

				{
					122,
					745
				},

				{
					123,
					734
				},

				{
					124,
					722
				},

				{
					125,
					711
				},

				{
					126,
					699
				},

				{
					127,
					688
				},

				{
					128,
					676
				},

				{
					129,
					665
				},

				{
					130,
					653
				},

				{
					131,
					642
				},

				{
					132,
					630
				},

				{
					133,
					618
				},

				{
					134,
					607
				},

				{
					135,
					595
				},

				{
					136,
					584
				},

				{
					137,
					572
				},

				{
					138,
					560
				},

				{
					139,
					549
				},

				{
					140,
					537
				},

				{
					141,
					525
				},

				{
					142,
					514
				},

				{
					143,
					502
				},

				{
					144,
					490
				},

				{
					145,
					479
				},

				{
					146,
					467
				},

				{
					147,
					455
				},

				{
					148,
					443
				},

				{
					149,
					432
				},

				{
					150,
					420
				},

				{
					255,
					420
				},

				{
					255,
					-2147483648
				}
			};
			double[] array2 = new double[256];
			for (int i = 0; i < 256; i++)
			{
				double num = (double)i * 3300.0 / 255.75;
				for (int j = 0; j < array.Length; j++)
				{
					if (num > (double)array[j, 1])
					{
						double num2 = (double)array[j, 0];
						double num3 = (double)array[j, 1];
						double num4 = (double)array[j - 1, 1] - num3;
						double num5 = (double)array[j - 1, 0] - num2;
						array2[i] = (num - num3) * (num5 / num4) + num2;
						break;
					}
				}
			}
			return array2;
		}
	}
}
